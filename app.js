// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let ticket = [];
let generatedNumbers = [];
let intervalId = null;
const generationInterval = 1000; // –ò–Ω—Ç–µ—Ä–≤–∞–ª –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —á–∏—Å–µ–ª (–º—Å)

// –≠–ª–µ–º–µ–Ω—Ç—ã DOM
const ticketNumberInput = document.getElementById("ticket-number");
const loadTicketButton = document.getElementById("load-ticket");
const ticketContainer = document.getElementById("ticket");
const startGameButton = document.getElementById("start-game");
const generatedNumbersContainer = document.getElementById("generated-numbers");

// –ó–∞–≥—Ä—É–∑–∫–∞ –±–∏–ª–µ—Ç–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞
async function loadTicket(ticketNumber) {
    try {
        const response = await fetch("tickets.txt");
        const data = await response.text();

        // –†–∞–∑–¥–µ–ª—è–µ–º –±–∏–ª–µ—Ç—ã –ø–æ —Å—Ç—Ä–æ–∫–∞–º
        const tickets = data.trim().split("\n").map(line =>
            line.split(",").map(cell => (cell.trim() === "_" ? null : parseInt(cell.trim())))
        );

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –Ω–æ–º–µ—Ä–∞ –±–∏–ª–µ—Ç–∞
        if (ticketNumber < 1 || ticketNumber > tickets.length) {
            alert(`–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –±–∏–ª–µ—Ç–∞! –£–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ ${tickets.length}.`);
            return;
        }

        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –±–∏–ª–µ—Ç –≤ 9x3 –º–∞—Ç—Ä–∏—Ü—É
        const selectedTicket = tickets[ticketNumber - 1];
        ticket = [];
        for (let i = 0; i < 3; i++) {
            ticket.push(selectedTicket.slice(i * 9, (i + 1) * 9));
        }

        renderTicket();
        startGameButton.disabled = false; // –†–∞–∑—Ä–µ—à–∞–µ–º –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É
    } catch (error) {
        alert("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –±–∏–ª–µ—Ç–∞!");
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±–∏–ª–µ—Ç–∞
function renderTicket() {
    ticketContainer.innerHTML = "";
    ticket.flat().forEach(cell => {
        const div = document.createElement("div");
        div.className = "cell";
        div.innerText = cell || ""; // –ü—É—Å—Ç—ã–µ —è—á–µ–π–∫–∏ –æ—Å—Ç–∞—é—Ç—Å—è –ø—É—Å—Ç—ã–º–∏
        ticketContainer.appendChild(div);
    });
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —á–∏—Å–ª–∞
function generateNumber() {
    if (generatedNumbers.length >= 90) {
        alert("–í—Å–µ —á–∏—Å–ª–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã!");
        clearInterval(intervalId);
        return;
    }

    let number;
    do {
        number = Math.floor(Math.random() * 90) + 1;
    } while (generatedNumbers.includes(number));
    generatedNumbers.push(number);
    renderGeneratedNumbers();
    markNumber(number);
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —á–∏—Å–µ–ª
function renderGeneratedNumbers() {
    generatedNumbersContainer.innerHTML = "";
    generatedNumbers.forEach(num => {
        const div = document.createElement("div");
        div.className = "cell";
        div.innerText = num;
        generatedNumbersContainer.appendChild(div);
    });
}

// –ü–æ–º–µ—Ç–∫–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –Ω–∞ –±–∏–ª–µ—Ç–µ
function markNumber(number) {
    const cells = document.querySelectorAll(".ticket .cell");
    ticket.flat().forEach((cell, index) => {
        if (cell === number) {
            cells[index].classList.add("marked");
        }
    });

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–∏–≥—Ä—ã—à–∞
    if (ticket.flat().filter(n => n !== null).every(n => generatedNumbers.includes(n))) {
        alert("üèÜ –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!");
        clearInterval(intervalId);
    }
}

// –°–æ–±—ã—Ç–∏—è
loadTicketButton.addEventListener("click", () => {
    const ticketNumber = parseInt(ticketNumberInput.value);
    loadTicket(ticketNumber);
});

startGameButton.addEventListener("click", () => {
    generatedNumbers = [];
    renderGeneratedNumbers();
    intervalId = setInterval(generateNumber, generationInterval);
});
